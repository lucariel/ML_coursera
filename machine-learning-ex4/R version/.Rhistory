"$6000 to 6999","$7000 to 7999","$8000 to 9999","10000 - 14999","15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat2<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)
ggplot(gss_cat2, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(gass_cat2$rincome_factor)
View(gss_cat2$rincome_factor)
ggplot(gss_cat, aes(rincome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
income_level<-c("Not applicable", "No answer", "Don't know", "Refused", "Lt$1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","10000 - 14999","15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat2<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)
ggplot(gss_cat2, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggs_cat%>%
count(rincome)
gss_cat%>%
count(rincome)
income_level<-c("Not applicable", "No answer", "Don't know", "Refused", "Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","10000 - 14999","15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat2<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)
ggplot(gss_cat2, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat%>%
count(rincome)
income_level<-c("Not applicable", "No answer", "Don't know", "Refused", "Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","$10000 - 14999","15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat2<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)
#View(gss_cat2$rincome_factor)
ggplot(gss_cat2, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
income_level<-c("Not applicable", "No answer", "Don't know", "Refused", "Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","$10000 - 14999","$15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat2<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)
#View(gss_cat2$rincome_factor)
ggplot(gss_cat2, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
##I still think it coul look better taking out Not applicable
income_level2<-c("No answer", "Don't know", "Refused", "Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","$10000 - 14999","$15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat3<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)%>%
filter(!is.na(rincome_factor))
ggplot(gss_cat3, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat3<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level)
)%>%
filter(!is.na(rincome_factor))
ggplot(gss_cat3, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat3<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level2)
)%>%
filter(!is.na(rincome_factor))
ggplot(gss_cat3, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
##or maby all non numerical values
income_level3<-c("Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","$10000 - 14999","$15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat4<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level3)
)%>%
filter(!is.na(rincome_factor))
ggplot(gss_cat4, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#2.What is the most common relig in this survey? Whatâ€™s the most common partyid?
names(gss_cat)
ggs_cat%>%
count(relig)
gss_cat%>%
count(relig)
gss_cat%>%
max(count(relig))
gss_cat%>%
max(count(gss_catrelig))
max(count(gss_cat$relig))
gss_cat%>%
count(relig)
gss_cat%>%
count(relig, partyid)
gss_cat%>%
count(relig)
gss_cat%>%
count(partyid)
names(gss_cat)
gss_cat5<-cbind(gss_cat[gss_cat$relig], gss_cat[gss_cat$denom])
gss_cat5<-cbind(gss_cat$relig, gss_cat$denom)
View(gss_cat5)
gss_cat$relig
View(gss_cat$relig)
relig<-gss_cat$relig
relig
denom<-gss_cat$denom
gss_cat5<-cbind(relig, denom)
View(gss_cat5)
relig
?cbind()
a<-c(1,2,3)
b<-c(4,5,6)
c<-cbind(a,b)
c
#3.Which relig does denom (denomination) apply to?
#How can you find out with a table? How can you find out with a visualisation?
View(gss_cat)
gss_cat%>%
filter(relig, denom)
gss_cat%>%
filter(relig=1,
denom)
gss_cat%>%
filter(relig=1)
gss_cat%>%
filter(relig==1)
gss_cat%>%
filter(relig=="Protestant")
gss_cat6<-gss_cat%>%
filter(relig!="Protestant")
View(gss_cat6)
gss_cat6$
gss_cat6$denom
gss_cat6<-gss_cat%>%
filter(relig!="Protestant")
gss_cat6$denom
gss_cat6<-gss_cat%>%
filter(relig!="Protestant")%>%
count(denom)
gss_cat6<-gss_cat%>%
filter(relig="Protestant")%>%
count(denom)
gss_cat6<-gss_cat%>%
filter(relig=="Protestant")%>%
count(denom)
gss_cat6<-gss_cat%>%
filter(relig!="Protestant")%>%
count(denom)
View(gss_cat6)
##If I filter out the protestant, denom entries are meaningless
##c(No answer,Don't know,No denomination,Not applicable)
level_prot<-c("Protestant")
gss_cat4<-gss_cat%>%
mutate(
relig_factor = factor(relig, levels = level_prot)
)
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(relig, levels = level_prot)
)
ggplot(gss_cat7, aes(rincome_factor)) +
geom_bar()
ggplot(gss_cat7, aes(relig_factor)) +
geom_bar()
ggplot(gss_cat7, aes(denom)) +
geom_bar()
ggplot(gss_cat7, aes(denom)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(relig, levels = level_prot)
)%>%
filter(!is.na(relig_factor))
ggplot(gss_cat7, aes(denom)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
library(forcats)
gss_cat%>%
count(relig)
level_relig <- c("No answer", "Don't know","Inter-nondenominational", "Native american",
"Christian","Orthodox-christian","Moslem/islam","Other eastern","Hinduism",
"Buddhism","Other","None","Jewish","Catholic","Protestant"
)
gss_cat%>%
count(denom)
dnoems<-gss_cat%>%
count(denom)
View(dnoems)
level_denom<-dnoems$
##Protestant
gss_cat%>%
count(partyid)
level_denom<-dnoems$denom
level_denom
gss_cat%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig)
gss_cat%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig~ .)
gss_cat%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig)
## with a visualisation you could make a facet plot
##First change de levels of relig
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(rincome, levels = c("Protestant"))
)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig_factor)
## with a visualisation you could make a facet plot
##First change de levels of relig
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(rincome, levels = c("Protestant"))
)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig_factor)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(gss_cat7$relig_factor)
dnoems<-gss_cat%>%
count(relig)
dnoems
## with a visualisation you could make a facet plot
##First change de levels of relig
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(rincome, levels = c("Protestant"))
)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig_factor)
View(gss_cat7)
## with a visualisation you could make a facet plot
##First change de levels of relig
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(relig, levels = c("Protestant"))
)
gss_cat6<-gss_cat%>%
filter(relig!="Protestant")%>%
count(denom)
## with a visualisation you could make a facet plot
##First change de levels of relig
gss_cat7<-gss_cat%>%
mutate(
relig_factor = factor(relig, levels = c("Protestant"))
)
View(gss_cat7)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(relig_factor)
gss_cat7%>%ggplot(aes(denom))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(gss_cat7$relig_factor)
colnames(gss_cat7)
View(gss_cat)
source('~/Documents/R/R for Data Science/15Factors.R', echo=TRUE)
View(gss_cat)
gss_cat%>%group_by(year, partyid)%>%summarise(n = n())
gss_cat9<-gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
count(partyid)
gss_cat9%>%group_by(year, partyid)%>%summarise(n = n())
gss_cat9<-gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
))
gss_cat9%>%group_by(year, partyid)%>%summarise(n = n())
specie=c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition=rep(c("normal" , "stress" , "Nitrogen") , 4)
value=abs(rnorm(12 , 0 , 15))
data=data.frame(specie,condition,value)
data
gss_cat9
gss_cat9%>%
group_by(year, partyid)%>%
summarise(n = n())#%>%
gss_cat9%>%
group_by(year, partyid)%>%
summarise(n = n())%>%
ggplot(aes(fill = partyid, y = n, x = year))+
geom_bar(stat="identity", position="fill" )
count(gss_cat$rincome)
gss_cat$rincome%>%
count()
gss_cat%>%
count(rincome)
rincome_list<-gss_cat%>%
count(rincome)
rincome_list <- rincome_list$rincome
rincome_list
gss_cat10<-gss_cat %>%
mutate(partyid = fct_collapse(rincome,
no_data= c("No answer", "Don't know", "Refused"),
zero_10k= c("Lt $1000", "$1000 to 2999", "$3000 to 3999",
"$4000 to 4999","$5000 to 5999","$6000 to 6999",
"$7000 to 7999", "$8000 to 9999"),
k10_k25 = c("$10000 - 14999", "$15000 - 19999", "$20000 - 24999")
k25_more = "$25000 or more"
)) %>%
count(rincome)
gss_cat10<-gss_cat %>%
mutate(partyid = fct_collapse(rincome,
no_data= c("No answer", "Don't know", "Refused"),
zero_10k= c("Lt $1000", "$1000 to 2999", "$3000 to 3999",
"$4000 to 4999","$5000 to 5999","$6000 to 6999",
"$7000 to 7999", "$8000 to 9999"),
k10_k25 = c("$10000 - 14999", "$15000 - 19999", "$20000 - 24999"),
k25_more = "$25000 or more"
)) %>%
count(rincome)
gss_cat10
gss_cat10<-gss_cat %>%
mutate(rincome = fct_collapse(rincome,
no_data= c("No answer", "Don't know", "Refused"),
zero_10k= c("Lt $1000", "$1000 to 2999", "$3000 to 3999",
"$4000 to 4999","$5000 to 5999","$6000 to 6999",
"$7000 to 7999", "$8000 to 9999"),
k10_k25 = c("$10000 - 14999", "$15000 - 19999", "$20000 - 24999"),
k25_more = "$25000 or more"
)) %>%
count(rincome)
gss_cat10
hist(gss_cat10)
ggplot(gss_cat10, aes(rincome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
rincome_list
gss_cat10<-gss_cat %>%
mutate(rincome = fct_collapse(rincome,
no_data= c("No answer", "Don't know", "Refused", "Not applicable"),
zero_10k= c("Lt $1000", "$1000 to 2999", "$3000 to 3999",
"$4000 to 4999","$5000 to 5999","$6000 to 6999",
"$7000 to 7999", "$8000 to 9999"),
k10_k25 = c("$10000 - 14999", "$15000 - 19999", "$20000 - 24999"),
k25_more = "$25000 or more"
)) %>%
count(rincome)
ggplot(gss_cat10, aes(rincome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat10
gss_cat10%>%ggplot(aes(x =rincome, y = n ))+geom_bar()
gss_cat10%>%ggplot(aes(x =rincome ))+geom_bar()
gss_cat10%>%ggplot(aes(x =n ))+geom_bar()
gss_cat10
##or maby all non numerical values
income_level3<-c("Lt $1000",
"$1000 to 2999","$3000 to 3999","$4000 to 4999","$5000 to 5999",
"$6000 to 6999","$7000 to 7999","$8000 to 9999","$10000 - 14999","$15000 - 19999",
"$20000 - 24999","$25000 or more")
gss_cat4<-gss_cat%>%
mutate(
rincome_factor = factor(rincome, levels = income_level3)
)%>%
filter(!is.na(rincome_factor))
ggplot(gss_cat4, aes(rincome_factor)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(gss_cat10, aes(rincome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gss_cat10<-gss_cat %>%
mutate(rincome = fct_collapse(rincome,
no_data= c("No answer", "Don't know", "Refused", "Not applicable"),
zero_10k= c("Lt $1000", "$1000 to 2999", "$3000 to 3999",
"$4000 to 4999","$5000 to 5999","$6000 to 6999",
"$7000 to 7999", "$8000 to 9999"),
k10_k25 = c("$10000 - 14999", "$15000 - 19999", "$20000 - 24999"),
k25_more = "$25000 or more"
))
ggplot(gss_cat10, aes(rincome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
source('~/Documents/ML Coursera/machine-learning-ex4/R version/ex4.R', echo=TRUE)
setwd("~/Documents/ML Coursera/machine-learning-ex4/R version")
source('~/Documents/ML Coursera/machine-learning-ex4/R version/ex4.R', echo=TRUE)
a1
a1<-X[1,]
a1<-c(1,a1)
z2<-Theta1%*%a1
a2<-sigmoid(z2)
a2<-c(1,a2)
a2
z3<-Theta2%*%a2
a3<-sigmoid(z3)
delta3<-(a3-(Y[1,]))
Y<- matrix(0, nrow = m, ncol = num_labels)
for(i in 1:m){
Y[i,y[i]] = 1
}
delta3<-(a3-(Y[1,]))
delta3
delta2<-(t(Theta2)%*%delta3)*(a2*(1-a2))
delta2
a2*(1-a2)
t(Theta2)%*%delta3
delta2
View(delta2)
length(a1)
lenght(delta2)
length(delta2)
length(t(a1))
delta2%*%t(a1)
View(delta2%*%t(a1))
View(delta2%*%(a1))
Theta1_grad
for(t in 1:m){
########FORWARD PROPAGATION################
a1<-X[t,]
a1<-c(1,a1)
z2<-Theta1%*%a1
a2<-sigmoid(z2)
a2<-c(1,a2)
z3<-Theta2%*%a2
a3<-sigmoid(z3)
######Deltas#########
delta3<-(a3-(Y[t,]))
delta2<-(t(Theta2)%*%delta3)*(a2*(1-a2))
delta2<-delta2[2:length(delta2)]
Theta1_grad <-  Theta1_grad + delta2%*%t(a1)
Theta2_grad <-  Theta2_grad + delta3%*%t(a2)
}
Theta1_grad <- matrix(0, nrow = dim(Theta1)[1], ncol = dim(Theta1)[2])
Theta2_grad <- matrix(0, nrow = dim(Theta2)[1], ncol = dim(Theta2)[2])
for(t in 1:m){
########FORWARD PROPAGATION################
a1<-X[t,]
a1<-c(1,a1)
z2<-Theta1%*%a1
a2<-sigmoid(z2)
a2<-c(1,a2)
z3<-Theta2%*%a2
a3<-sigmoid(z3)
######Deltas#########
delta3<-(a3-(Y[t,]))
delta2<-(t(Theta2)%*%delta3)*(a2*(1-a2))
delta2<-delta2[2:length(delta2)]
Theta1_grad <-  Theta1_grad + delta2%*%t(a1)
Theta2_grad <-  Theta2_grad + delta3%*%t(a2)
}
Theta1_grad
View(Theta1_grad)
(cbind(0,Theta1[1:dim(Theta1)[1],2:dim(Theta1)[2]]))
View((cbind(0,Theta1[1:dim(Theta1)[1],2:dim(Theta1)[2]])))
cbind(0,2)
cbind(0,2,4)
dim(Theta1)[1]
Theta1[1:dim(Theta1)[1]
]
Theta1[1:dim(Theta1)[1]]
Theta1
Theta1[1:25]
Theta1[1:dim(Theta1)[1]]
View(Theta1)
head(Theta1)
as.tibble(Theta1)
as.tibble((cbind(0,Theta1[1:dim(Theta1)[1],2:dim(Theta1)[2]])))
Theta2_grad
Theta1_grad<-matrix(Theta1_grad, ncol = 1, byrow = F)
Theta2_grad<-matrix(Theta2_grad, ncol = 1, byrow = F)
grad <- c(as.vector(Theta1_grad), as.vector(Theta2_grad))
return(grad)
grad
length(grad)
